#!/usr/bin/env bash

set -x

# ===== Loading Scripting Additions ============

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)#macos-big-sur---automatically-load-scripting-addition-on-startup

# this requires adding:
# cc ALL = (root) NOPASSWD: /opt/homebrew/bin/yabai --load-sa
# to: /private/etc/sudoers.d/yabai
# e.g. with: sudo visudo -f /private/etc/sudoers.d/yabai
sudo yabai --load-sa
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"

# ===== Tiling setting =========================

# Uncomment to refresh ubersicht widget on workspace change
# Make sure to replace WIDGET NAME for the name of the ubersicht widget

# yabai -m signal --add event=space_changed action="osascript -e \"tell application id 'tracesOf.Uebersicht' to refresh widget id 'simple-bar-spaces-jsx'\""

yabai -m config                              \
    external_bar                off:41:0     \
    mouse_follows_focus         off          \
    focus_follows_mouse         off    \
    window_placement            second_child \
    window_topmost              off          \
    window_shadow               float        \
    active_window_opacity       1.0          \
    normal_window_opacity       0.90         \
    window_opacity              off          \
    insert_feedback_color       0x00000000   \
    active_window_border_color  0xff0000ff   \
    normal_window_border_color  0x00000000   \
    window_border_blur          on           \
    window_border_width         4            \
    window_border_radius        12           \
    window_border               off          \
    split_ratio                 0.50         \
    split_type                  auto         \
    auto_balance                off          \
    top_padding                 0           \
    left_padding                0           \
    right_padding               0           \
    bottom_padding              0           \
    window_gap                  8           \
    mouse_modifier              ctrl                      \
    mouse_action1               move                      \
    mouse_action2               resize                    \
    mouse_drop_action           swap

yabai -m config layout                      float
yabai -m config --space 1 layout            bsp
yabai -m config --space 2 layout            bsp
yabai -m config --space 4 layout            bsp
yabai -m config --space 6 layout            bsp
yabai -m config --space 9 layout            bsp

# yabai -m config external_bar all:23:0

# ===== Rules ==================================

yabai -m rule --add label="Finder" app="^Finder$" title="(Co(py|nnect)|Move|Info|Pref)" manage=off
yabai -m rule --add label="Stickies" app="^Stickies$" manage=off
yabai -m rule --add label="Mail" app="^Mail$" space=4
yabai -m rule --add label="Slack" app="^Slack$" space=4
yabai -m rule --add label="Calendar" app="^Calendar$" space=4
yabai -m rule --add app="Google Calendar" space=4
yabai -m rule --add app="ChatGPT" space=3
yabai -m rule --add app="Notion" space=9
yabai -m rule --add label="WhatsApp" app="^WhatsApp$" space=4
yabai -m rule --add label="(Fiji Is Just) ImageJ" app="^ImageJ$" space=7
yabai -m rule --add label="MATLAB" app="^MATLAB.*" space=7
yabai -m rule --add label="Safari" app="^Safari$" title="^(General|(Tab|Password|Website|Extension)s|AutoFill|Se(arch|curity)|Privacy|Advance)$" manage=off
yabai -m rule --add label="macfeh" app="^macfeh$"
yabai -m rule --add label="System Preferences" app="^System Preferences$" title=".*" manage=off
yabai -m rule --add label="App Store" app="^App Store$"
yabai -m rule --add label="Activity Monitor" app="^Activity Monitor$"
yabai -m rule --add label="KeePassXC" app="^KeePassXC$"
yabai -m rule --add label="Calculator" app="^Calculator$" manage=off
yabai -m rule --add label="Dictionary" app="^Dictionary$" manage=off
yabai -m rule --add label="Software Update" title="Software Update" manage=off
yabai -m rule --add label="About This Mac" app="System Information" title="About This Mac" manage=off


yabai -m rule --add label="Alacritty" app="^Alacritty$" manage=on
yabai -m rule --add label="Spotify" app="^Spotify$" space=6
yabai -m rule --add label="Finder" app="^Finder$"
# yabai -m rule --add label="OmniGraffle" app="^OmniGraffle$" manage=on space=3
yabai -m rule --add label="JupyterLab" app="^JupyterLab.*$" manage=on space=3
yabai -m rule --add label="Python" app="^python.*$" manage=off

# ===== Signals ================================
# spacebar

# spacebar -m config position             top
# spacebar -m config height               26
# spacebar -m config title                off
# spacebar -m config spaces               on
# spacebar -m config clock                on
# spacebar -m config power                on
# spacebar -m config padding_left         20
# spacebar -m config padding_right        20
# spacebar -m config spacing_left         25
# spacebar -m config spacing_right        15
# spacebar -m config text_font            "Helvetica:Bold:12.0"
# spacebar -m config icon_font            "Font Awesome 6 Free:Solid:12.0"
# spacebar -m config background_color     0xff202020
# spacebar -m config foreground_color     0xffa8a8a8
# spacebar -m config space_icon_color     0xff458588
# spacebar -m config power_icon_color     0xffcd950c
# spacebar -m config battery_icon_color   0xffd75f5f
# spacebar -m config dnd_icon_color       0xffa8a8a8
# spacebar -m config clock_icon_color     0xffa8a8a8
# spacebar -m config power_icon_strip      
# spacebar -m config space_icon_strip     1 2 3 4 5 6 7 8 9
# spacebar -m config space_icon           
# spacebar -m config clock_icon           
# spacebar -m config dnd_icon             
# spacebar -m config clock_format         "%d/%m %R"
# spacebar -m config right_shell          off
# spacebar -m config right_shell_icon     v spacebar -m config right_shell_command  "whoami"
#

# ----------- signals
# below signals are from the official yabairc, they make sure that focus has sensible fallbacks when destroying and minimizing
yabai -m signal --add event=window_destroyed action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id') &> /dev/null"
yabai -m signal --add event=window_minimized action="yabai -m window --focus \$(yabai -m query --windows --space | jq '.[0].id') &> /dev/null"


yabai -m signal --add event=window_focused action="/Users/cc/bin/yabai-smart-gaps.sh"
yabai -m signal --add event=window_destroyed action="/Users/cc/bin/yabai-smart-gaps.sh"
# yabai -m signal --add event=window_created action="/Users/cc/bin/yabai-smart-gaps.sh"
# yabai -m signal --add event=window_moved action="/Users/cc/bin/yabai-smart-gaps.sh"
# yabai -m signal --add event=window_minimized action="/Users/cc/bin/yabai-smart-gaps.sh"
# yabai -m signal --add event=window_deminimized action="/Users/cc/bin/yabai-smart-gaps.sh"
# yabai -m signal --add event=space_changed action="/Users/cc/bin/yabai-smart-gaps.sh"


set +x
printf "yabai: configuration loaded...\\n"


# ===== Startup placement ======
open "/Applications/iTerm.app"
sleep 1;
for wid in $(yabai -m query --windows | jq '.[] | select(.app == "iTerm2") | .id'); do yabai -m window $wid --space 1; done

open "/Applications/Brave Browser.app"
sleep 1;
for wid in $(yabai -m query --windows | jq '.[] | select(.app == "Brave Browser") | .id'); do yabai -m window $wid --space 2; done

open "/Applications/WhatsApp.app"
sleep 1;
for wid in $(yabai -m query --windows | jq '.[] | select(.app == "WhatsApp") | .id'); do yabai -m window $wid --space 4; done

# open "/Applications/Messenger.app"
# sleep 1;
# for wid in $(yabai -m query --windows | jq '.[] | select(.app == "Messenger") | .id'); do yabai -m window $wid --space 4; done

# open "/Applications/Anki.app"
# sleep 1;
# for wid in $(yabai -m query --windows | jq '.[] | select(.app == "Anki") | .id'); do yabai -m window $wid --space 4; done

# sleep 1;
# ~/bin/yabai_create_stack.sh
#
