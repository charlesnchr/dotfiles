# open apps
alt - return : "${HOME}"/.config/yabai/open_iterm2.sh
alt + cmd - return : "${HOME}"/.config/yabai/open_firefox.sh

# Navigation
alt - h : yabai -m window --focus west
alt - j : yabai -m window --focus south
alt - k : yabai -m window --focus north
alt - l : yabai -m window --focus east

# Moving windows
shift + alt - h : yabai -m window --warp west
shift + alt - j : yabai -m window --warp south
shift + alt - k : yabai -m window --warp north
shift + alt - l : yabai -m window --warp east

# Move focus container to workspace
# shift + alt - m : yabai -m window --space last && yabai -m space --focus last
# shift + alt - p : yabai -m window --space prev && yabai -m space --focus prev
# shift + alt - n : yabai -m window --space next && yabai -m space --focus next

# Resize windows
alt + cmd - n : yabai -m window --resize left:-200:0; \
                  yabai -m window --resize right:-200:0
alt + cmd - m : yabai -m window --resize bottom:0:200; \
                  yabai -m window --resize top:0:200
alt + cmd - 0x2B : yabai -m window --resize top:0:-200; \
                  yabai -m window --resize bottom:0:-200
alt + cmd - 0x2F : yabai -m window --resize right:200:0; \
                  yabai -m window --resize left:200:0

# Resize windows
shift + alt + cmd - n : yabai -m window --resize left:-50:0; \
                  yabai -m window --resize right:-50:0
shift + alt + cmd - m : yabai -m window --resize bottom:0:50; \
                  yabai -m window --resize top:0:50
shift + alt + cmd - 0x2B : yabai -m window --resize top:0:-50; \
                  yabai -m window --resize bottom:0:-50
shift + alt + cmd - 0x2F : yabai -m window --resize right:50:0; \
                  yabai -m window --resize left:50:0

# Equalize size of windows
lctrl + alt + cmd - b : yabai -m space --balance

# Enable / Disable gaps in current workspace
lctrl + alt - g : yabai -m space --toggle padding; yabai -m space --toggle gap

# Rotate windows clockwise and anticlockwise
alt + cmd + shift + lctrl - n         : yabai -m space --rotate 270
alt + cmd + shift + lctrl - m : yabai -m space --rotate 90

# Rotate on X and Y Axis
shift + alt - x : yabai -m space --mirror x-axis
shift + alt - y : yabai -m space --mirror y-axis

# Set insertion point for focused container
shift + alt - n : yabai -m window --insert west
shift + alt - m : yabai -m window --insert south
shift + alt - 0x2B : yabai -m window --insert north
shift + alt - 0x2F : yabai -m window --insert east

# Float / Unfloat window
shift + alt - space : \
    yabai -m window --toggle float; \
    yabai -m window --toggle border

# Float / Unfloat space (does not seem to work)
# shift + lctrl - space : \
#     yabai -m space --layout $(yabai -m query --spaces --space | jq -r 'if .type == "bsp" then "float" else "bsp" end')

# Restart Yabai
shift + alt - r : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting Yabai\" with title \"Yabai\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.yabai"

shift + alt - e : \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting skhd\" with title \"skhd\""; \
    launchctl kickstart -k "gui/${UID}/homebrew.mxcl.skhd"


# this requires adding:
# cc ALL = (root) NOPASSWD: /bin/launchctl
# to: /private/etc/sudoers.d/launchctl
# e.g. with: sudo visudo -f /private/etc/sudoers.d/launchctl
shift + alt - w : \
    /usr/bin/env osascript <<< \
        "display notification \"killing kmonad\" with title \"kmonad\""; \
    sudo launchctl unload /Library/LaunchDaemons/kmonad.plist; \
    sleep 2; \
    /usr/bin/env osascript <<< \
        "display notification \"Restarting kmonad\" with title \"kmonad\""; \
    sudo launchctl load /Library/LaunchDaemons/kmonad.plist


# lctrl + alt + cmd - m : current_space=$(yabai -m query --spaces --space | jq '.index') \
# yabai -m query --windows | \
#   jq '.[] | select(.minimized == 1).id' | \
#   xargs -L1 -I{} sh -c ' { \
#     yabai -m window $1 --space $2 \
#     yabai -m window $1 --deminimize \
#     } & ' sh {} $current_space

# Make window native fullscreen
ctrl + cmd + alt - f         : yabai -m window --toggle zoom-fullscreen
shift + cmd + alt - f : yabai -m window --toggle native-fullscreen


# focus window
ctrl + cmd + alt - 0x2C : yabai -m window --swap largest

# swap managed window
# shift + alt - h : yabai -m window --swap north

# move managed window
# shift + cmd - h : yabai -m window --warp east

# shift + cmd - h : yabai -m window --warp east

# make floating window fill screen
# shift + alt - up     : yabai -m window --grid 1:1:0:0:1:1

# create desktop, move window and follow focus - uses jq for parsing json (brew install jq)
# shift + cmd - n : yabai -m space --create && \
#                   index="$(yabai -m query --spaces --display | jq 'map(select(."native-fullscreen" == 0))[-1].index')" && \
#                   yabai -m window --space "${index}" && \
#                   yabai -m space --focus "${index}"


alt + shift - 1 : yabai -m window --space 1
alt + shift - 2 : yabai -m window --space 2
alt + shift - 3 : yabai -m window --space 3
alt + shift - 4 : yabai -m window --space 4
alt + shift - 5 : yabai -m window --space 5
alt + shift - 6 : yabai -m window --space 6
alt + shift - 7 : yabai -m window --space 7
alt + shift - 8 : yabai -m window --space 8
alt + shift - 9 : yabai -m window --space 9


alt + cmd - 1 : yabai -m window --space 1; yabai -m space --focus 1
alt + cmd - 2 : yabai -m window --space 2; yabai -m space --focus 2
alt + cmd - 3 : yabai -m window --space 3; yabai -m space --focus 3
alt + cmd - 4 : yabai -m window --space 4; yabai -m space --focus 4
alt + cmd - 5 : yabai -m window --space 5; yabai -m space --focus 5
alt + cmd - 6 : yabai -m window --space 6; yabai -m space --focus 6
alt + cmd - 7 : yabai -m window --space 7; yabai -m space --focus 7
alt + cmd - 8 : yabai -m window --space 8; yabai -m space --focus 8
alt + cmd - 9 : yabai -m window --space 9; yabai -m space --focus 9

# ctrl + shift - 4 : yabai -m window --space 4 && \
#                   yabai -m space --focus 4

# ctrl + shift - 5 : yabai -m window --space 5 && \
#                   yabai -m space --focus 5

# ctrl + shift - 6 : yabai -m window --space 6 && \
#                   yabai -m space --focus 6

# fast focus desktop
alt - 1 : yabai -m space --focus 1
alt - 2 : yabai -m space --focus 2
alt - 3 : yabai -m space --focus 3
alt - 4 : yabai -m space --focus 4
alt - 5 : yabai -m space --focus 5
alt - 6 : yabai -m space --focus 6
alt - 7 : yabai -m space --focus 7
alt - 8 : yabai -m space --focus 8
alt - 9 : yabai -m space --focus 9
alt - tab : yabai -m space --focus recent

ctrl + alt - l : yabai -m space --focus next
ctrl + alt - h : yabai -m space --focus prev

# send window to desktop and follow focus
# shift + cmd - z : yabai -m window --space next; yabai -m space --focus next
# shift + cmd - 2 : yabai -m window --space  2; yabai -m space --focus 2

# focus monitor
cmd + alt - h  : yabai -m display --focus west
cmd + alt - l  : yabai -m display --focus east
# ctrl + alt - 1  : yabai -m display --focus 2
# ctrl + alt - 2  : yabai -m display --focus 1
# ctrl + alt - 3  : yabai -m display --focus 3

# send window to monitor and follow focus
# ctrl + cmd - p  : yabai -m window --display west; yabai -m display --focus west
# ctrl + cmd - n  : yabai -m window --display east; yabai -m display --focus east
# ctrl + cmd - 1  : yabai -m window --display 2; yabai -m display --focus 2
# ctrl + cmd - 2  : yabai -m window --display 1; yabai -m display --focus 1
# ctrl + cmd - 3  : yabai -m window --display 3; yabai -m display --focus 3

# move floating window
# shift + ctrl - a : yabai -m window --move rel:-20:0
# shift + ctrl - s : yabai -m window --move rel:0:20

# increase window size
# shift + alt - a : yabai -m window --resize left:-20:0
# shift + alt - w : yabai -m window --resize top:0:-20

# decrease window size
# shift + alt - s : yabai -m window --resize bottom:0:-20
# shift + alt - d : yabai -m window --resize top:0:20

# set insertion point in focused container
# ctrl + alt - h : yabai -m window --insert west

# toggle window zoom
# alt - d : yabai -m window --toggle zoom-parent
# alt - f : yabai -m window --toggle zoom-fullscreen

# toggle window split type
# alt - e : yabai -m window --toggle split

# float / unfloat window and center on screen
# alt - t : yabai -m window --toggle float;\
#           yabai -m window --grid 4:4:1:1:2:2

# toggle sticky(+float), topmost, picture-in-picture
# alt - p : yabai -m window --toggle sticky;\
#           yabai -m window --toggle topmost
          # yabai -m window --toggle pip

# hookshot replacements
# half left/right
shift + ctrl + alt + cmd - a : yabai -m window --grid 1:2:0:1:1:1
shift + ctrl + alt + cmd - s : yabai -m window --grid 1:2:1:1:1:1
# two thirs left/right
shift + ctrl + alt + cmd - r : yabai -m window --grid 1:3:0:1:2:1
shift + ctrl + alt + cmd - t : yabai -m window --grid 1:3:1:1:2:1
# one third left/mid/right
shift + ctrl + alt + cmd - q : yabai -m window --grid 1:3:0:1:1:1
shift + ctrl + alt + cmd - w : yabai -m window --grid 1:3:1:1:1:1
shift + ctrl + alt + cmd - e : yabai -m window --grid 1:3:2:1:1:1
# one half horizontal
shift + ctrl + alt + cmd - d : yabai -m window --grid 2:1:1:0:2:1
shift + ctrl + alt + cmd - f : yabai -m window --grid 2:1:0:1:1:1
# center
shift + ctrl + alt + cmd - c : yabai -m window --grid 6:4:1:1:2:4
# top left
shift + ctrl + alt + cmd - u : yabai -m window --grid 2:2:0:0:1:1
# bottom left
shift + ctrl + alt + cmd - i : yabai -m window --grid 2:2:0:1:1:1
# top right
shift + ctrl + alt + cmd - o : yabai -m window --grid 2:2:1:0:1:1
# bottom right
shift + ctrl + alt + cmd - p : yabai -m window --grid 2:2:1:1:1:1
# fullscreen
shift + ctrl + alt + cmd - g : yabai -m window --grid 1:1:0:0:1:1

# minimize
lctrl + alt + cmd - backspace : yabai -m window --minimize
# lctrl + alt + cmd - g : yabai -m space --deminimize



# below  may be useful but don't seem to be consistent
#
# alt-k
# alt + shift - k : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $has_index > 0 then nth($has_index - 1).id else nth($array_length - 1).id end'  \
#   | xargs -I{} yabai -m window --swap {}

# # alt-j
# alt + shift - j : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $array_length - 1 > $has_index then nth($has_index + 1).id else nth(0).id end' \
#   | xargs -I{} yabai -m window --swap {}

# iterate windows
# lctrl + alt + cmd - u : yabai -m query --spaces --space \
#   | jq -re ".index" \
#   | xargs -I{} yabai -m query --windows --space {} \
#   | jq -sre 'add | map(select(."is-minimized"==false)) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $has_index > 0 then nth($has_index - 1).id else nth($array_length - 1).id end'  \
#   | xargs -I{} yabai -m window --focus {}

lctrl + alt + cmd - p : sh /Users/cc/.config/yabai/cycle_window.sh 0 x_dir 0
lctrl + alt + cmd - u : sh /Users/cc/.config/yabai/cycle_window.sh 1 x_dir 0


# from github: https://github.com/koekeishiya/yabai/issues/113  --  doesn't work
# cycle through all visible windows sorted by: coordinates -> display index
# ctrl + alt + cmd - m : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.visible == 1 and .subrole != \"AXUnknown\")) | reverse | nth(index(map(select(.focused == 1))) - 1).id")"
# same github page but works well
lctrl + alt + cmd - n : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
lctrl + alt + cmd - m : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"
# lctrl + alt + cmd - m : yabai -m window --focus "$(yabai -m query --windows | jq -re "sort_by(.display, .space, .frame.x, .frame.y, .id) | map(select(.\"is-visible\" == true and .role != \"AXUnknown\")) | reverse | nth(index(map(select(.\"has-focus\" == true))) - 1).id")"

lctrl + alt - right : sh /Users/cc/.config/yabai/cycle_window.sh 0 x_dir 1
lctrl + alt - left : sh /Users/cc/.config/yabai/cycle_window.sh 1 x_dir 1
lctrl + alt - down : sh /Users/cc/.config/yabai/cycle_window.sh 0 y_dir 1
lctrl + alt - up : sh /Users/cc/.config/yabai/cycle_window.sh 1 _dir 1

# move displays
alt + shift - 0x29 : yabai -m window --display west; yabai -m display --focus west
alt + shift - 0x27 : yabai -m window --display east; yabai -m display --focus east

# most recent current screen
lctrl + alt + cmd - i : yabai -m query --spaces --space \
  | jq -re ".index" \
  | xargs -I{} yabai -m query --windows --space {} \
  | jq -sre 'add | map(select(."is-minimized"==false)) | . as $array | length as $array_length | index(map(select(."has-focus"==true))) as $has_index | if $array_length - 1 > $has_index then nth($has_index + 1).id else nth(0).id end' \
  | xargs -I{} yabai -m window --focus {}

# cmd + shift - k : if [ "$(yabai -m query --spaces --space | jq -r '.type')" = "stack" ]; then (yabai -m window --focus stack.next || yabai -m window --focus stack.first); else yabai -m window --focus next || yabai -m window --focus first; fi
# cmd + shift - j : if [ "$(yabai -m query --spaces --space | jq -r '.type')" = "stack" ]; then (yabai -m window --focus stack.prev || yabai -m window --focus stack.last); else yabai -m window --focus prev || yabai -m window --focus last; fi
